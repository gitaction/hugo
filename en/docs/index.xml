<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Deep Understanding of Hugo: Become an domain expert in SSG</title><link>https://hugo.notes.sunwei.xyz/en/docs/</link><description>Recent content in Docs on Deep Understanding of Hugo: Become an domain expert in SSG</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://hugo.notes.sunwei.xyz/en/docs/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://hugo.notes.sunwei.xyz/en/docs/how/arch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/en/docs/how/arch/</guid><description>Hugo Architecture # We can learn how to use Hugo to create our own sites and theme. Here are examples: Personal Site and Custom Theme. It is easy to learn and use.
At the same time, Hugo is an open source project based on the Apache 2.0 protocol, which means that you can boldly use your creativity.
For example, for sites in the source code field, such as Understanding Hugo in Depth, the source code and notes are separated and can be executed on GolangPlay.</description></item><item><title/><link>https://hugo.notes.sunwei.xyz/en/docs/how/event-storming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/en/docs/how/event-storming/</guid><description>Hugo 事件风暴 # Hugo的功能很全面，拥有强大的自定义函数库，可以用来制作模板、短代码等。 这在站点的构建过程中，可以帮助提供各种数据，如获取目录结构，主动加载文件。 以及页面信息汇总，方便展示分页列表或者搜索。 还可以帮助分类，提供标签服务。
支持多语言，创建国际化站点一样简单。
主题库更是能满足各种不同的个性化需求，更贴近专业使用场景，你还可以零成本切换。
Hugo是如何一步步将博客变成站点的？ 下面我们还是通过 游乐场实例，来一探究竟。
邀你一起来动手。 用我们最喜欢的IDE，打开我们的 游乐场项目源码。 通过直接输出日志的方式，来看一看hugo的完整构建流程。
$ cd /go/to/hugo-playground $ go run . 先来看一看主流程。 通过搜索以字符串&amp;quot;==&amp;gt; Process main:&amp;ldquo;开头的日志条目，我们可以了清楚的看到主函数的处理流程如下所示：
==&amp;gt; Process main: prepare example project file systems ==&amp;gt; Process main: load configurations from config.toml and themes ==&amp;gt; Process main: setup hugo file systems based on machine file system and configurations ==&amp;gt; Process main: create hugo sites based on deps ==&amp;gt; Process main: hugo building.</description></item><item><title/><link>https://hugo.notes.sunwei.xyz/en/docs/how/playground/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/en/docs/how/playground/</guid><description>Hugo Playground # The experience of building a site with Hugo is great. The first is that it is fast to build, and the second is that it is easy to use, a hugo command, and our site is ready.
During the construction process, Hugo provides a wealth of built-in functions that can provide you with almost any site-related information you need during the construction process. Let the theme help with all presentation and layout related issues through reusable templates.</description></item><item><title/><link>https://hugo.notes.sunwei.xyz/en/docs/what/site/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/en/docs/what/site/</guid><description>个人站点样例: https://sunwei.xyz # Hugo能很方便的帮助我们构建站点，接下来我们来重放一下我的个人站点是如何构建出来的。
需求 # 将原有的纯HTML站点切换成Hugo站点。
原站点一览：
功能也不复杂，让我们切换到原始版本。 通过git history可以查到提交记录如下： ➜ xyz git:(master) git checkout ef51befc96f398dcfac1b5c04eb4dc7101633012 得到源码如下：
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;zh&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1, shrink-to-fit=no&amp;#34;&amp;gt; &amp;lt;title&amp;gt;sunwei.xyz&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div style=&amp;#34;width: 400px; margin: 20px auto;&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;/&amp;#34;&amp;gt;中文&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;/en.html&amp;#34;&amp;gt;English&amp;lt;/a&amp;gt; &amp;lt;div&amp;gt; &amp;lt;h2&amp;gt;孙伟&amp;lt;/h2&amp;gt; &amp;lt;p&amp;gt;专注企业级端到端解决方案&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;hr&amp;gt; &amp;lt;h5&amp;gt; &amp;lt;span&amp;gt;读书笔记&amp;lt;/span&amp;gt; &amp;lt;/h5&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;#34;https://ent.sunwei.xyz&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt; 企业级应用 &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;#34;https://buildkit.notes.sunwei.xyz/&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt; Moby Buildkit 源码读书笔记 &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;h5&amp;gt;&amp;lt;span&amp;gt;工具&amp;lt;/span&amp;gt;&amp;lt;/h5&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;#34;https://jsoneditoronline.</description></item><item><title/><link>https://hugo.notes.sunwei.xyz/en/docs/what/theme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/en/docs/what/theme/</guid><description>自定义Hugo主题 # Hugo可以创建站点，还可以创建自己的主题。 以站点 sunwe.xyz为例。 让我们将站点中的内容和主题分离，让我们专注在内容创作上。 同时还可以让更多和我们有共同诉求的人，重用我们的主题。
需求分析 # 我们的目标是分离出站点的主题，也就是将content和layouts，及static分离开，并作为主题引入。
所需要的步骤如下：
创建主题仓库 将模板样式从原有站点分离出来 引入主题 实施细节 # 接下来我们一步步的实现以上需求。
创建主题仓库 # 因为站点定位个人品牌，需求并不复杂，以简洁为主。 我们给主题取名zero，寓意起点。
首先创建好空的zero Github仓库，再用Hugo命令生成主题默认目录结构：
➜ zero git:(main) ✗ hugo new theme . Creating theme at /Users/sunwei/github/sunwei/zero/themes ➜ zero git:(main) ✗ ls LICENSE README.md public resources themes 可以看出，Hugo认为我们是在站点里，正在给站点创建主题。 实际上我们需要的是themes里面的内容。 在我们的实例中，其实就theme.toml这一个主题配置文件。 拷贝到我们的仓库根目录下后，更新其中说明内容如下：
name = &amp;#34;Zero&amp;#34; license = &amp;#34;MIT&amp;#34; licenselink = &amp;#34;https://github.com/sunwei/zero/blob/master/LICENSE&amp;#34; description = &amp;#34;Hugo Theme for sunewi.xyz&amp;#34; homepage = &amp;#34;https://sunwei.xyz/&amp;#34; demosite = &amp;#34;https://sunwei.</description></item></channel></rss>