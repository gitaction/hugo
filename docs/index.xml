<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Deep Dive into Hugo: Becoming an Expert in the Static Site Generator Domain</title><link>https://hugo.notes.sunwei.xyz/docs/</link><description>Recent content in Docs on Deep Dive into Hugo: Becoming an Expert in the Static Site Generator Domain</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://hugo.notes.sunwei.xyz/docs/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://hugo.notes.sunwei.xyz/docs/how/%E4%BA%8B%E4%BB%B6%E9%A3%8E%E6%9A%B4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/docs/how/%E4%BA%8B%E4%BB%B6%E9%A3%8E%E6%9A%B4/</guid><description>Hugo 事件风暴 # Hugo的功能很全面，拥有强大的自定义函数库，可以用来制作模板、短代码等。 这在站点的构建过程中，可以帮助提供各种数据，如获取目录结构，主动加载文件。 以及页面信息汇总，方便展示分页列表或者搜索。 还可以帮助分类，提供标签服务。
支持多语言，创建国际化站点一样简单。
主题库更是能满足各种不同的个性化需求，更贴近专业使用场景，你还可以零成本切换。
Hugo是如何一步步将博客变成站点的？ 下面我们还是通过 游乐场实例，来一探究竟。
邀你一起来动手。 用我们最喜欢的IDE，打开我们的 游乐场项目源码。 通过直接输出日志的方式，来看一看hugo的完整构建流程。
$ cd /go/to/hugo-playground $ go run . 先来看一看主流程。 通过搜索以字符串&amp;quot;==&amp;gt; Process main:&amp;ldquo;开头的日志条目，我们可以了清楚的看到主函数的处理流程如下所示：
==&amp;gt; Process main: prepare example project file systems ==&amp;gt; Process main: load configurations from config.toml and themes ==&amp;gt; Process main: setup hugo file systems based on machine file system and configurations ==&amp;gt; Process main: create hugo sites based on deps ==&amp;gt; Process main: hugo building.</description></item><item><title/><link>https://hugo.notes.sunwei.xyz/docs/how/%E6%B8%B8%E4%B9%90%E5%9C%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/docs/how/%E6%B8%B8%E4%B9%90%E5%9C%BA/</guid><description>Hugo 游乐场 # 使用Hugo构建站点的体验很棒。 首先是构建速度快，其次是使用起来简单，一个hugo命令，我们的站点就已经就绪。
在构建过程中，Hugo提供了丰富的内置功能函数，可以在构建过程中向你提供所需要的几乎任何站点相关的信息。 通过可重用模板，让主题来帮助处理所有展示和布局相关的问题。 让作者更专注在内容的创作上。
游乐场 # 站点构建的就将写好的内容，转化成Web服务器能理解的网站资源。 比如我们写作的时候用的是Markdown格式，生成的网站资源通常是HTML格式。
下面是一个简单的初始化博客内容：
-- config.toml -- theme = &amp;#34;mytheme&amp;#34; contentDir = &amp;#34;mycontent&amp;#34; -- myproject.txt -- Hello project! -- themes/mytheme/mytheme.txt -- Hello theme! -- mycontent/blog/post.md -- --- title: &amp;#34;Post Title&amp;#34; --- ### first blog Hello Blog -- layouts/index.html -- {{ $entries := (readDir &amp;#34;.&amp;#34;) }} START:|{{ range $entry := $entries }}{{ if not $entry.IsDir }}{{ $entry.Name }}|{{ end }}{{ end }}:END: -- layouts/_default/single.</description></item><item><title/><link>https://hugo.notes.sunwei.xyz/docs/what/%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/docs/what/%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/</guid><description>个人站点样例: https://sunwei.xyz # Hugo能很方便的帮助我们构建站点，接下来我们来重放一下我的个人站点是如何构建出来的。
需求 # 将原有的纯HTML站点切换成Hugo站点。
原站点一览：
功能也不复杂，让我们切换到原始版本。 通过git history可以查到提交记录如下： ➜ xyz git:(master) git checkout ef51befc96f398dcfac1b5c04eb4dc7101633012 得到源码如下：
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;zh&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1, shrink-to-fit=no&amp;#34;&amp;gt; &amp;lt;title&amp;gt;sunwei.xyz&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div style=&amp;#34;width: 400px; margin: 20px auto;&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;/&amp;#34;&amp;gt;中文&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;/en.html&amp;#34;&amp;gt;English&amp;lt;/a&amp;gt; &amp;lt;div&amp;gt; &amp;lt;h2&amp;gt;孙伟&amp;lt;/h2&amp;gt; &amp;lt;p&amp;gt;专注企业级端到端解决方案&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;hr&amp;gt; &amp;lt;h5&amp;gt; &amp;lt;span&amp;gt;读书笔记&amp;lt;/span&amp;gt; &amp;lt;/h5&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;#34;https://ent.sunwei.xyz&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt; 企业级应用 &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;#34;https://buildkit.notes.sunwei.xyz/&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt; Moby Buildkit 源码读书笔记 &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;h5&amp;gt;&amp;lt;span&amp;gt;工具&amp;lt;/span&amp;gt;&amp;lt;/h5&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;#34;https://jsoneditoronline.</description></item><item><title/><link>https://hugo.notes.sunwei.xyz/docs/what/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/docs/what/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/</guid><description>自定义Hugo主题 # Hugo可以创建站点，还可以创建自己的主题。 以站点 sunwe.xyz为例。 让我们将站点中的内容和主题分离，让我们专注在内容创作上。 同时还可以让更多和我们有共同诉求的人，重用我们的主题。
需求分析 # 我们的目标是分离出站点的主题，也就是将content和layouts，及static分离开，并作为主题引入。
所需要的步骤如下：
创建主题仓库 将模板样式从原有站点分离出来 引入主题 实施细节 # 接下来我们一步步的实现以上需求。
创建主题仓库 # 因为站点定位个人品牌，需求并不复杂，以简洁为主。 我们给主题取名zero，寓意起点。
首先创建好空的zero Github仓库，再用Hugo命令生成主题默认目录结构：
➜ zero git:(main) ✗ hugo new theme . Creating theme at /Users/sunwei/github/sunwei/zero/themes ➜ zero git:(main) ✗ ls LICENSE README.md public resources themes 可以看出，Hugo认为我们是在站点里，正在给站点创建主题。 实际上我们需要的是themes里面的内容。 在我们的实例中，其实就theme.toml这一个主题配置文件。 拷贝到我们的仓库根目录下后，更新其中说明内容如下：
name = &amp;#34;Zero&amp;#34; license = &amp;#34;MIT&amp;#34; licenselink = &amp;#34;https://github.com/sunwei/zero/blob/master/LICENSE&amp;#34; description = &amp;#34;Hugo Theme for sunewi.xyz&amp;#34; homepage = &amp;#34;https://sunwei.xyz/&amp;#34; demosite = &amp;#34;https://sunwei.</description></item><item><title>第三章</title><link>https://hugo.notes.sunwei.xyz/docs/how/%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/docs/how/%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84/</guid><description>Hugo源码精读 # 通过 个人站点和 自定义主题实例，我们可以了解到如何使用Hugo创建自己的站点以及主题。 使用起来很简单，很快就能上手。
同时Hugo还是基于Apache 2.0协议的开源项目，这意味着你完全可以大胆地发挥自己的创造力。
比如针对源码领域的站点，像 深入理解Hugo，将源码和注解分离，并可以在 Golang Play上执行。 让源码的学习体验更加立体，不仅有解释，还能参与其中，修改样例，进一步帮助理解。
目前Hugo还无法支持构建这样的站点，主要有两个原因。 一是 内容格式，Hugo目前主要支持的内容格式是Markdown，而上面的内容格式是.go源码文件。 其次是 功能函数，Hugo并没有处理代码的函数可以直接使用，要想解析源码及注解。 虽然可以组合字符串函数进行处理，但使用起来繁琐，拓展起来困难，维护起来更是让人连连摇头。
不过，源码都给我们了，还能要求更多吗？ 毕竟我们可是有追求的软件工程师啊！
无论是从实用的角度，还是通过学习优秀源码，来进行交流学习的角度，我们都有充分的理由来对这一宝藏进行发掘。
本章的目标就是打开藏宝图来了解Hugo的基础架构，主要从以下两个方向展开：
对架构思路做一个概要说明，对基础架构有一个全貌的理解 从模块代码入手，讨论配置和语言的关系、Hugo的模块、文件系统的组织、站点内容的收集方案、模板的生命周期，以及发布的流程。 通过阅读本章内容，我们将会对Hugo这个站点构建工具有一个全面的认识，并对各阶段之间的关系有一个清晰的认识，为接下来详细源码实现讲解章节打好基础。
出发吧，伟大的工程师啊！
Hugo的架构设计 # 结合Hugo站点构建领域 事件，和 Hugo游乐场源码，Hugo的架构设计会变得很清晰：
Hugo的架构思路很容易理解，主要分三大块，分别是配置模块，站点模块和依赖模块。
配置模块
Hugo最先解析的，就是用户项目的配置文件config.toml。 由configLoader发起，从硬盘读取配置文件，解析后存储为键值对对象。 configLoader主要需完成三件事，加载用户项目配置文件是第一件，用来理解用户的自定义需求。 第二件是补全默认配置Defaults Config，这样才能保其它模块正常运作。 第三件是生成模块配置信息，从用户项目开始，将用户项目作为第一个模块 - project module，在我们的实例中还有第二个模块，那就是主题模块mytheme。 模块之间有依赖关系，并且只有一个所有者Owner。 项目模块project module比较特殊，因为是初始模块，所以不属于任何其它模块。
type Module interface { ... // Owner In the dependency tree, this is the first // module that defines this module as a dependency.</description></item><item><title>引言</title><link>https://hugo.notes.sunwei.xyz/docs/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/docs/introduction/</guid><description>引言 # 背景和目标 # 欢迎来到《深入Hugo：成为静态站点生成领域专家》。
这本书将带领你深入探索静态站点生成技术，应用领域驱动设计（DDD）原则，从0到1示例如何打造自己的静态站点生成服务。 让你不仅成为一个熟练的开发者，还能有能力创建该领域中的代表作，从而脱颖而出。
本书的写作背景和目标是引导你进入静态站点生成领域，迈出成为领域专家坚实的一步。 阅读Hugo开源项目源码，应用DDD方法，深刻理解和掌握该领域的核心知识，从而能够动手创建该领域的工具或服务。 不仅要探索静态站点生成的内部工作原理，也要关注如何将这些技术应用于不同的业务场景，才能满足不同的市场需求。 融合技术和市场，为客户创造更大的价值。
这本书适合谁 # 本书适用于那些对静态站点生成技术感兴趣的技术从业者和创业者，以及那些希望深入了解如何将技术应用于不同领域的业务场景的读者。 无论你是程序员、技术管理者，还是创业者，或是学生及自学者，本书都将为你提供有价值的知识和见解。
本书适合各种不同背景和经验水平的读者，包括但不限于：
开发者和工程师：如果你是一名开发者，希望深入了解静态站点生成技术以及如何应用DDD原则，这本书将为你提供宝贵的知识和实践机会。 软件架构师：如果你是一名软件架构师，希望提高自己的架构和设计能力，以应用于静态站点生成项目，本书可作为相关的指导和案例研究。 技术管理者：如果你是技术管理者，希望更深入地了解技术和如何将其应用于不同领域的业务，本书将为你提供管理和领导团队的有力工具。 想要进一步提升职业竞争力的人：如果你希望通过学习新的技术和领域知识来提高职业竞争力，这本书将为你提供成为领域专家的机会。 自由职业者：如果你是自由职业者，本书将帮助你扩展你的技能和服务，让更多的客户看到你的专业性，从而增强你的市场竞争力。 创业者：如果你是创业者，希望创建基于静态站点生成技术和DDD原则的创新业务，本书将为你提供创业灵感和实施方法。 学生和自学者：无论你是计算机科学专业的学生还是自学的技术爱好者，这本书将帮助你建立坚实的技术基础，探索新领域，为未来的职业做好准备。 增强个人能力，提高业务成就 # 阅读本书后，新增的业务模式：
咨询服务：提供专业咨询服务，帮助客户解决与你的领域相关的问题和挑战。这可以包括架构设计、技术选型、领域建模等方面的咨询。 培训和教育：开设培训课程或研讨会，分享你的知识和经验，帮助其他人学习并提高他们的技能。 参与开源项目：贡献你的时间和技能到开源项目，将大大丰富你的简历，以提高竞争力。 创业和创新：基于你的领域专业知识，创办新的技术创业公司，开发新的产品或服务。 Hugo定制化开发：为企业创建专业站点，增强网络获客，达成更多交易。创建个人品牌，持续积累自己的影响力，为新的方向做好准备。 不同学习渠道 # 本课程提供多种学习渠道，以满足不同学习需求：
Udemy课程：课程将发布在 Udemy 平台上，供学生在线学习。在 Udemy 上，你将获得视频课程、练习题、课程证书等学习资源。 Leanpub电子书：本课程的电子书将在 Leanpub 上提供，以便你离线阅读和学习。电子书将包含本课程的全部内容，以便你随时翻阅。 Youtube频道：TODO 不同学习渠道将帮助你更灵活地选择适合你的学习方式。无论你是喜欢在线视频课程还是喜欢离线阅读电子书，都可以从本课程中获得所需的知识和技能。</description></item></channel></rss>