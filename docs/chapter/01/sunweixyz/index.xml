<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>1.6 个人站点实例 on Deep Dive into Hugo: Becoming an Expert in the Static Site Generator Domain</title><link>https://hugo.notes.sunwei.xyz/docs/chapter/01/sunweixyz/</link><description>Recent content in 1.6 个人站点实例 on Deep Dive into Hugo: Becoming an Expert in the Static Site Generator Domain</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://hugo.notes.sunwei.xyz/docs/chapter/01/sunweixyz/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub Pages sunwei.xyz</title><link>https://hugo.notes.sunwei.xyz/docs/chapter/01/sunweixyz/deploy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/docs/chapter/01/sunweixyz/deploy/</guid><description>将站点部署到GitHub Pages # 将 Hugo 站点部署到 GitHub Pages 非常简单，以下是详细的步骤：
步骤 1：创建 GitHub 仓库 # 在 GitHub 上创建一个新的仓库，仓库名为 &amp;lt;你的用户名&amp;gt;.github.io。请确保使用你的 GitHub 用户名替换 &amp;lt;你的用户名&amp;gt;。
在终端中，进入你的 Hugo 站点目录。
初始化 Git 仓库并将其关联到你的 GitHub 仓库：
git init git remote add origin https://github.com/&amp;lt;你的用户名&amp;gt;/&amp;lt;你的用户名&amp;gt;.github.io.git 步骤 2：配置 Hugo # 打开站点的配置文件 config.toml（或 config.yaml 或 config.json，取决于你使用的配置格式）。
添加以下配置，指定基准路径（baseURL）：
baseURL = &amp;#34;https://&amp;lt;你的用户名&amp;gt;.github.io/&amp;#34; 请确保使用你的 GitHub 用户名替换 &amp;lt;你的用户名&amp;gt;。
步骤 3：生成静态站点 # 在终端中运行以下命令，生成静态站点文件：
hugo 这将在站点目录下生成一个 public/ 文件夹，其中包含静态站点的所有文件。
步骤 4：提交代码到 GitHub # 将生成的 public/ 文件夹下的内容提交到 GitHub 仓库：</description></item><item><title>Hugo site sunwei.xyz</title><link>https://hugo.notes.sunwei.xyz/docs/chapter/01/sunweixyz/site/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/docs/chapter/01/sunweixyz/site/</guid><description>个人站点样例: https://sunwei.xyz # Hugo能很方便的帮助我们构建站点，接下来我们来重放一下我的个人站点是如何构建出来的。
需求 # 将原有的纯HTML站点切换成Hugo站点。
原站点一览：
功能也不复杂，让我们切换到原始版本。 通过git history可以查到提交记录如下： ➜ xyz git:(master) git checkout ef51befc96f398dcfac1b5c04eb4dc7101633012 得到源码如下：
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;zh&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1, shrink-to-fit=no&amp;#34;&amp;gt; &amp;lt;title&amp;gt;sunwei.xyz&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div style=&amp;#34;width: 400px; margin: 20px auto;&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;/&amp;#34;&amp;gt;中文&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;/en.html&amp;#34;&amp;gt;English&amp;lt;/a&amp;gt; &amp;lt;div&amp;gt; &amp;lt;h2&amp;gt;孙伟&amp;lt;/h2&amp;gt; &amp;lt;p&amp;gt;专注企业级端到端解决方案&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;hr&amp;gt; &amp;lt;h5&amp;gt; &amp;lt;span&amp;gt;读书笔记&amp;lt;/span&amp;gt; &amp;lt;/h5&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;#34;https://ent.sunwei.xyz&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt; 企业级应用 &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;#34;https://buildkit.notes.sunwei.xyz/&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt; Moby Buildkit 源码读书笔记 &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;h5&amp;gt;&amp;lt;span&amp;gt;工具&amp;lt;/span&amp;gt;&amp;lt;/h5&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;#34;https://jsoneditoronline.</description></item><item><title>Hugo theme sunwei.xyz</title><link>https://hugo.notes.sunwei.xyz/docs/chapter/01/sunweixyz/theme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo.notes.sunwei.xyz/docs/chapter/01/sunweixyz/theme/</guid><description>新建Hugo主题 # Hugo可以创建站点，还可以创建自己的主题。 以站点 sunwe.xyz为例。 让我们将站点中的内容和主题分离，让我们专注在内容创作上。 同时还可以让更多和我们有共同诉求的人，重用我们的主题。
需求分析 # 我们的目标是分离出站点的主题，也就是将content和layouts，及static分离开，并作为主题引入。
所需要的步骤如下：
创建主题仓库 将模板样式从原有站点分离出来 引入主题 实施细节 # 接下来我们一步步的实现以上需求。
创建主题仓库 # 因为站点定位个人品牌，需求并不复杂，以简洁为主。 我们给主题取名zero，寓意起点。
首先创建好空的zero Github仓库，再用Hugo命令生成主题默认目录结构：
➜ zero git:(main) ✗ hugo new theme . Creating theme at /Users/sunwei/github/sunwei/zero/themes ➜ zero git:(main) ✗ ls LICENSE README.md public resources themes 可以看出，Hugo认为我们是在站点里，正在给站点创建主题。 实际上我们需要的是themes里面的内容。 在我们的实例中，其实就theme.toml这一个主题配置文件。 拷贝到我们的仓库根目录下后，更新其中说明内容如下：
name = &amp;#34;Zero&amp;#34; license = &amp;#34;MIT&amp;#34; licenselink = &amp;#34;https://github.com/sunwei/zero/blob/master/LICENSE&amp;#34; description = &amp;#34;Hugo Theme for sunewi.xyz&amp;#34; homepage = &amp;#34;https://sunwei.xyz/&amp;#34; demosite = &amp;#34;https://sunwei.</description></item></channel></rss>